(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{464:function(_,v,t){_.exports=t.p+"assets/img/1681694862700-22c1a6a0-f0ac-4a34-a4c9-d2291613fdea.2ff77d8c.png"},465:function(_,v,t){_.exports=t.p+"assets/img/1681695482957-0af2fa85-0d72-4465-b0cc-c6c6b609210d.f47c5463.png"},466:function(_,v,t){_.exports=t.p+"assets/img/1681695501634-cb6a2de7-a3de-40b0-ae22-551b1b0ddc89.dabd65bd.png"},467:function(_,v,t){_.exports=t.p+"assets/img/1681695973041-01dfbb1b-ee45-445e-a32f-20d040cfcf32.a5720719.png"},468:function(_,v,t){_.exports=t.p+"assets/img/1681695991202-b2f340a3-0182-4b5c-972a-c29b516becf9.30aa0fd0.png"},469:function(_,v,t){_.exports=t.p+"assets/img/1681696017216-92020d16-fb26-4292-9b91-504aecac0654.fc17dce6.png"},470:function(_,v,t){_.exports=t.p+"assets/img/1689418122772-80979c6e-642f-4ce8-aa93-dc03462bf1a4.fb5017cb.png"},471:function(_,v,t){_.exports=t.p+"assets/img/1681696640305-f74a9ee2-f132-4e28-9765-d285be26462f.617c3aa3.png"},579:function(_,v,t){"use strict";t.r(v);var s=t(2),a=Object(s.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("p",[_._v("浏览器中页面的渲染分为两个阶段：网络请求阶段 和 页面渲染阶段。")]),_._v(" "),v("h3",{attrs:{id:"网络请求阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络请求阶段"}},[_._v("#")]),_._v(" 网络请求阶段")]),_._v(" "),v("p",[_._v("...")]),_._v(" "),v("h3",{attrs:{id:"页面渲染阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染阶段"}},[_._v("#")]),_._v(" 页面渲染阶段")]),_._v(" "),v("p",[_._v("当浏览器的 "),v("strong",[_._v("网络线程")]),_._v(" 收到 HTML 文档后，会产生一个渲染任务，并将其传递给 "),v("strong",[_._v("渲染主线程")]),_._v(" 的消息队列。\n在 "),v("strong",[_._v("事件循环机制")]),_._v(" 的作用下，"),v("strong",[_._v("渲染主线程 "),v("strong",[_._v("取出 "),v("strong",[_._v("消息队列")]),_._v(" 中的 "),v("strong",[_._v("渲染任务")]),_._v("，开启渲染流程。\n整个页面的渲染流程分为多个阶段，分别是：")]),v("em",[_._v("解析 HTML")])]),_._v("、"),v("strong",[v("em",[_._v("样式计算")])]),_._v("、"),v("strong",[v("em",[_._v("布局")])]),_._v("、"),v("strong",[v("em",[_._v("分层")])]),_._v("、"),v("strong",[v("em",[_._v("绘制")])]),_._v("、"),v("strong",[v("em",[_._v("分块")])]),_._v("、"),v("strong",[v("em",[_._v("光栅化")])]),_._v("、"),v("strong",[v("em",[_._v("合成")])]),_._v("。")]),_._v(" "),v("h4",{attrs:{id:"解析-html"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析-html"}},[_._v("#")]),_._v(" 解析 HTML")]),_._v(" "),v("p",[_._v("解析过程中遇到 CSS 解析 CSS，遇到 JavaScript 执行 JavaScript。\n为了提高解析效率，浏览器在开始解析前，会启动一个 "),v("strong",[v("em",[_._v("预解析的线程")])]),_._v("，率先下载 HTML 中的**"),v("em",[_._v("外部 CSS 文件")]),_._v("** 和**"),v("em",[_._v("外部的 JavaScript 文件")]),_._v("**。")]),_._v(" "),v("blockquote",[v("p",[_._v("**如果主线程解析到 **"),v("code",[_._v("**link**")]),v("strong",[_._v("标签位置")]),_._v("，此时外部的 CSS 文件还没有下载解析好，主线程不会等待，继续解析后续的 HTML。这是因为 下载和解析 CSS 的工作是在 **_预解析线程 _**中进行的。这就是 CSS 不会阻塞 HTML 解析的根本原因。")])]),_._v(" "),v("blockquote",[v("p",[v("strong",[_._v("如果主线程解析到 "),v("strong",[v("code",[_._v("**script**")])]),_._v(" 标签位置")]),_._v("，会停止解析 HTML，转而等到 "),v("strong",[v("em",[_._v("JavaScript 文件下载好，并将其全局代码解析并执行完成后")])]),_._v("，才能继续解析 HTML 。这是因为 JavaScript 代码的执行过程可能会修改当前的 DOM 树，所以 DOM 树的生成必须暂停。这就是 JavaScript 会阻塞 HTML 解析的根本原因。")])]),_._v(" "),v("p",[_._v("这一步完成后，会得到 DOM 树和 CSSOM 树，浏览器的 默认样式、内部样式、外部样式、行内样式 均会包含在 CSSOM 树中。")]),_._v(" "),v("h4",{attrs:{id:"样式计算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#样式计算"}},[_._v("#")]),_._v(" 样式计算")]),_._v(" "),v("p",[_._v("主线程会遍历得到的 DOM 树，依次为树中每个节点计算出它最终的样式，称之为 Computed Style。")]),_._v(" "),v("blockquote",[v("p",[_._v("在这一过程中，很多 "),v("strong",[v("em",[_._v("预设值")])]),_._v(" 会变成 "),v("strong",[_._v("_绝对值 _")]),_._v("。比如 "),v("code",[_._v("color: red;")]),_._v("会变成"),v("code",[_._v("color: rgb(255, 0, 0);")]),_._v("相对单位会变成绝对单位，比如"),v("code",[_._v("font-size: 2em;")]),_._v("会变成"),v("code",[_._v("font-size: 24px;")])])]),_._v(" "),v("blockquote",[v("p",[_._v("灵魂一问：为什么 "),v("code",[_._v("head")]),_._v("元素是隐藏的？\n因为浏览器存在默认样式表。在默认样式中，"),v("code",[_._v("head")]),_._v("元素被设置了"),v("code",[_._v("display: none;")]),_._v("。同样的，为什么会有块级元素？因为默认情况下设置了"),v("code",[_._v("display:block;")])])]),_._v(" "),v("p",[_._v("这一步计算后，"),v("strong",[_._v("会得到一颗 _带有样式 _的 DOM 树")]),_._v("。")]),_._v(" "),v("h4",{attrs:{id:"布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[_._v("#")]),_._v(" 布局")]),_._v(" "),v("p",[_._v("布局阶段会依次遍历 DOM 树的每一个节点，计算每个节点的 "),v("strong",[_._v("_几何信息 _")]),_._v("。例如节点的宽高、相对包含块的位置。\n"),v("strong",[_._v("大部分时候，DOM 树和布局树并非一一对应")]),_._v("。比如：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("display: none;")]),_._v("的节点没有几何信息，因此不会生成到布局树；")]),_._v(" "),v("li",[_._v("使用了"),v("strong",[_._v("伪元素选择器")]),_._v("，虽然 DOM 树中"),v("strong",[_._v("不存在这些伪元素节点，但它们拥有几何信息")]),_._v("，所以会生成到布局树中。")]),_._v(" "),v("li",[_._v("还有 "),v("strong",[_._v("匿名行盒")]),_._v("、**匿名块盒 **等都会导致 DOM 数和布局树无法一一对应。\n"),v("ul",[v("li",[_._v("HTML元素里的 "),v("strong",[_._v("_文本内容 必须在 行盒 中 _")]),_._v("，")]),_._v(" "),v("li",[v("strong",[_._v("_行盒 和 块盒 不能相邻 _")])])])])]),_._v(" "),v("p",[v("img",{attrs:{src:t(464),alt:"image.png"}})]),_._v(" "),v("blockquote",[v("p",[_._v("如图：")]),_._v(" "),v("ol",[v("li",[_._v("布局树中，因为 块元素"),v("code",[_._v("<p>")]),_._v("中直接存在文本 "),v("code",[_._v("a")]),_._v("、"),v("code",[_._v("c")]),_._v("，所以在生成布局树时，会使用 "),v("strong",[_._v("匿名行盒")]),_._v("包裹内容"),v("code",[_._v("a")]),_._v("、"),v("code",[_._v("c")]),_._v("。")]),_._v(" "),v("li",[_._v("文本内容 "),v("code",[_._v("b")]),_._v("直接与块盒"),v("code",[_._v("<p>")]),_._v("相邻，所以应该使用 **匿名块盒 "),v("strong",[_._v("包裹"),v("code",[_._v("b")]),_._v("，但由于文本内容不能直接和块盒相邻，此时还会生成 行盒 包裹"),v("code",[_._v("b")]),_._v("。\n（图中是错的。"),v("strong",[_._v("文本")]),v("code",[_._v("**b**")]),v("strong",[_._v("的分支应该是：")]),v("code",[_._v("**div**")])]),_._v(" -> "),v("strong",[v("code",[_._v("**匿名块盒**")])]),_._v(" -> "),v("strong",[v("code",[_._v("**匿名行盒**")])]),_._v(" -> **"),v("code",[_._v("**b**")]),_._v("）")])])]),_._v(" "),v("h4",{attrs:{id:"分层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分层"}},[_._v("#")]),_._v(" 分层")]),_._v(" "),v("p",[_._v("主线程会使用一套复杂的策略对整个布局树中进行 分层。")]),_._v(" "),v("blockquote",[v("p",[_._v("分层的好处："),v("strong",[v("em",[_._v("将来某一层改变后，仅会对该层进行后续处理，从而提升效率。")])])])]),_._v(" "),v("blockquote",[v("p",[_._v("滚动条（滚动条单独分一层）、堆叠上下文、transform、opacity 等样式或多或少的影响分层；\n可以通过"),v("code",[_._v("will-change")]),_._v("属性更大程度影响分层结果。\n注意：不要分层过多。")])]),_._v(" "),v("blockquote",[v("p",[v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/will-change",target:"_blank",rel:"noopener noreferrer"}},[_._v("will-change"),v("OutboundLink")],1),_._v(" 用于告诉浏览器哪些属性会发生变化。")])]),_._v(" "),v("h4",{attrs:{id:"绘制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#绘制"}},[_._v("#")]),_._v(" 绘制")]),_._v(" "),v("p",[v("strong",[_._v("主线程")]),_._v(" 会为 "),v("strong",[_._v("每个层")]),_._v(" 单独 "),v("strong",[_._v("产生绘制指令集")]),_._v("，用于描述这一层的内如该如何画出来。\n"),v("img",{attrs:{src:t(465),alt:"image.png"}}),_._v(" "),v("img",{attrs:{src:t(466),alt:"image.png"}})]),_._v(" "),v("h4",{attrs:{id:"分块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分块"}},[_._v("#")]),_._v(" 分块")]),_._v(" "),v("blockquote",[v("p",[_._v("合成线程 也在 渲染进程中。")])]),_._v(" "),v("p",[_._v("主线程将每个图层的绘制信息提交给合成线程。\n"),v("strong",[_._v("合成线程")]),_._v(" 首先对 **每个图层 **进行 "),v("strong",[_._v("分块")]),_._v("，将其划分为更多的小区域。它会从 **线程池 **中拿取多个线程来完成分块工作。\n"),v("img",{attrs:{src:t(467),alt:"image.png"}})]),_._v(" "),v("h4",{attrs:{id:"光栅化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[_._v("#")]),_._v(" 光栅化")]),_._v(" "),v("p",[v("strong",[_._v("合成线程")]),_._v(" 会将 "),v("strong",[_._v("块信息")]),_._v(" 交给 "),v("strong",[_._v("GPU 进程")]),_._v("。\n"),v("img",{attrs:{src:t(468),alt:"image.png"}}),_._v(" "),v("strong",[_._v("GPU 进程")]),_._v(" 会开启"),v("strong",[_._v("多个线程")]),_._v("来完成 "),v("strong",[_._v("光栅化")]),_._v("，并**_优先处理靠近视口区域的块 _**。\n光栅化的结果，就是一块一块的位图。\n"),v("img",{attrs:{src:t(469),alt:"image.png"}})]),_._v(" "),v("h4",{attrs:{id:"画"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#画"}},[_._v("#")]),_._v(" 画")]),_._v(" "),v("p",[_._v("合成线程 拿到每一个层、每一个块的位图后，生成一个个【指引"),v("code",[_._v("quad")]),_._v("】信息。\n指引会标识出每个位图应该画到屏幕的哪个位置，以及会考虑到旋转、缩放等变形。")]),_._v(" "),v("blockquote",[v("p",[_._v("所以，"),v("code",[_._v("**transform**")]),v("strong",[_._v("发生在合成线程！与渲染主线程无关，这就是它效率高的本质原因。")])])]),_._v(" "),v("p",[v("img",{attrs:{src:t(470),alt:"image.png"}}),_._v("\n合成线程会把"),v("code",[_._v("quad")]),_._v("提交给 GPU进程，由 GPU进程 产生系统调用，提交给 GPU硬件，完成最终的屏幕成像。")]),_._v(" "),v("blockquote",[v("p",[_._v("为什么 合成线程 需要把 "),v("code",[_._v("quad")]),_._v(" 提交给 GPU进程产生系统调用呢？\n因为浏览器的渲染进程是一个沙盒，它与计算机操作系统不相关。因此它是安全的，当浏览网站中病毒时，没法影响操作系统。同样的，他没法直接调用操作系统的接口。所以会将执行信息交给GPU 进程来产生系统调用。")])]),_._v(" "),v("p",[v("img",{attrs:{src:t(471),alt:"image.png"}})])])}),[],!1,null,null,null);v.default=a.exports}}]);